---
import { getLangFromUrl, useTranslations } from '../i18n';
import { ExternalLink, Github, Calendar, Tag } from 'lucide-astro';

interface Props {
  projects: any[];
}

const { projects } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Thumbnail mapping for projects
const PROJECT_THUMBNAILS = {
  'horarios_app': '/src/assets/images/horarios_app_thumbnail.webp',
  'printNelsy': '/src/assets/images/print_nelsy_thumbnail.webp',
  'Distri Marcas SJG': '/src/assets/images/distrimarcassjg_thumbnail.webp'
};

// Function to get thumbnail for a project
function getProjectThumbnail(projectName: string): string | null {
  for (const [key, thumbnail] of Object.entries(PROJECT_THUMBNAILS)) {
    if (projectName.toLowerCase().includes(key.toLowerCase())) {
      return thumbnail;
    }
  }
  return null;
}
---

<section class="projects" id="projects">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">{t('projects.title')}</h2>
    </div>

    <div class="projects-grid">
      {projects.map((project, index) => {
        const thumbnail = getProjectThumbnail(project.name);
        return (
          <article class="project-card" data-aos="fade-up" data-aos-delay={index * 100}>
            {thumbnail && (
              <div class="project-thumbnail">
                <img 
                  src={thumbnail} 
                  alt={`${project.name} thumbnail`}
                  loading="lazy"
                  class="thumbnail-image"
                />
              </div>
            )}
            <div class="project-header">
              <div class="project-meta">
                <h3 class="project-title">{project.name}</h3>
                <div class="project-type">
                  <Tag size={14} />
                  <span>{project.entity}</span>
                </div>
              </div>
              <div class="project-links">
                {project.url && (
                  <a 
                    href={project.url} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="project-link"
                    aria-label={`${t('projects.viewProject')} ${project.name}`}
                  >
                    <ExternalLink size={18} />
                  </a>
                )}
                {project.repository && (
                  <a 
                    href={project.repository} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="project-link"
                    aria-label={`${t('projects.viewCode')} ${project.name}`}
                  >
                    <Github size={18} />
                  </a>
                )}
              </div>
            </div>

          <div class="project-content">
            <p class="project-description">{project.description}</p>
            
            <div class="project-highlights">
              <h4>{t('projects.highlights')}</h4>
              <ul class="highlights-list">
                {project.highlights.map((highlight: string) => (
                  <li>{highlight}</li>
                ))}
              </ul>
            </div>

            <div class="project-technologies">
              <h4>{t('projects.technologies')}</h4>
              <div class="tech-tags">
                {project.keywords.map((tech: string) => (
                  <span class="tech-tag">{tech}</span>
                ))}
              </div>
            </div>

            <div class="project-role">
              <Calendar size={14} />
              <span>{project.roles.join(', ')}</span>
            </div>
          </div>

          <div class="project-footer">
            <div class="project-actions">
              {project.url && (
                <a 
                  href={project.url} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="btn btn-primary btn-sm"
                >
                  <ExternalLink size={14} />
                  {t('projects.viewProject')}
                </a>
              )}
              {project.repository && (
                <a 
                  href={project.repository} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="btn btn-secondary btn-sm"
                >
                  <Github size={14} />
                  {t('projects.viewCode')}
                </a>
              )}
            </div>
          </div>
        </article>
        );
      })}
    </div>

    <div class="projects-cta">
      <p>{t('projects.moreProjects')}</p>
      <a 
        href="https://github.com/DavidValenciaX" 
        target="_blank" 
        rel="noopener noreferrer"
        class="btn btn-outline"
      >
        <Github size={16} />
        {t('projects.viewAllProjects')}
      </a>
    </div>
  </div>
</section>

<style>
  .projects {
    padding: 5rem 0;
    background: var(--bg-secondary);
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 1rem;
  }

  .section-subtitle {
    font-size: 1.1rem;
    color: var(--text-secondary);
    max-width: 600px;
    margin: 0 auto;
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
  }

  .project-card {
    background: var(--bg-primary);
    border: 1px solid var(--border-color);
    border-radius: 1rem;
    padding: 2rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .project-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
  }

  .project-thumbnail {
    height: 200px;
    margin-bottom: 1.5rem;
    border-radius: 0.75rem;
    overflow: hidden;
    background: var(--bg-secondary);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .thumbnail-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .project-card:hover .thumbnail-image {
    transform: scale(1.05);
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    border-color: var(--accent-primary-30);
  }

  .project-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1.5rem;
    gap: 1rem;
  }

  .project-meta {
    flex: 1;
  }

  .project-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }

  .project-type {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    font-size: 0.85rem;
  }

  .project-type svg {
    color: var(--accent-primary);
  }

  .project-links {
    display: flex;
    gap: 0.5rem;
    flex-shrink: 0;
  }

  .project-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    color: var(--text-secondary);
    transition: all 0.3s ease;
  }

  .project-link:hover {
    background: var(--accent-primary);
    color: white;
    border-color: var(--accent-primary);
    transform: translateY(-2px);
  }

  .project-content {
    margin-bottom: 2rem;
  }

  .project-description {
    font-size: 0.95rem;
    line-height: 1.6;
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
  }

  .project-highlights,
  .project-technologies {
    margin-bottom: 1.5rem;
  }

  .project-highlights h4,
  .project-technologies h4 {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 0.75rem;
  }

  .highlights-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .highlights-list li {
    font-size: 0.85rem;
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
    padding-left: 1rem;
    position: relative;
  }

  .highlights-list li::before {
    content: 'â€¢';
    color: var(--accent-primary);
    position: absolute;
    left: 0;
    font-weight: bold;
  }

  .tech-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tech-tag {
    padding: 0.3rem 0.7rem;
    background: var(--accent-primary-15);
    color: var(--accent-primary);
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 500;
    border: 1px solid var(--accent-primary-25);
  }

  .project-role {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    font-size: 0.85rem;
    margin-bottom: 1rem;
  }

  .project-role svg {
    color: var(--accent-primary);
  }

  .project-footer {
    border-top: 1px solid var(--border-color);
    padding-top: 1.5rem;
  }

  .project-actions {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .btn-sm {
    padding: 0.5rem 1rem;
    font-size: 0.85rem;
  }

  .projects-cta {
    text-align: center;
    padding: 3rem 2rem;
    background: var(--bg-primary);
    border-radius: 1rem;
    border: 1px solid var(--border-color);
  }

  .projects-cta p {
    font-size: 1.1rem;
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
  }

  .btn-outline {
    background: transparent;
    border: 2px solid var(--accent-primary);
    color: var(--accent-primary);
  }

  .btn-outline:hover {
    background: var(--accent-primary);
    color: white;
  }

  @media (max-width: 768px) {
    .projects {
      padding: 3rem 0;
    }

    .section-header {
      margin-bottom: 3rem;
    }

    .section-title {
      font-size: 2rem;
    }

    .projects-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .project-card {
      padding: 1.5rem;
    }

    .project-thumbnail {
      height: 150px;
    }

    .project-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .project-links {
      align-self: flex-end;
    }

    .project-actions {
      flex-direction: column;
    }

    .projects-cta {
      padding: 2rem 1rem;
    }
  }

  @media (max-width: 480px) {
    .project-actions {
      gap: 0.5rem;
    }

    .btn-sm {
      width: 100%;
      justify-content: center;
    }
  }
</style>