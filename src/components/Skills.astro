---
import { useTranslations } from '../i18n';
import type { Skill, Lang } from '../types/resume';
import {
  siHtml5,
  siCss,
  siJavascript,
  siNodedotjs,
  siExpress,
  siSwagger,
  siPostgresql,
  siMongodb,
  siJest,
  siGithubactions,
  siGit,
  siGithub,
  siWordpress,
  siWoo,
} from 'simple-icons';

interface Props {
  skills: Skill[];
  lang?: Lang;
}

const { skills, lang } = Astro.props;
const resolvedLang = lang ?? 'es';
const t = useTranslations(resolvedLang);

// Constants for skill icon configuration
const ICON_SIZE = 20;

// Type for icon data
interface IconData {
  svg: string;
  hex: string;
  title: string;
}

// Mapping of skill names to simple-icons objects
const SKILL_ICON_MAP: Record<string, IconData> = {
  'HTML': siHtml5,
  'CSS': siCss,
  'JavaScript': siJavascript,
  'Node.js': siNodedotjs,
  'Express': siExpress,
  'Swagger': siSwagger,
  'PostgreSQL': siPostgresql,
  'MongoDB': siMongodb,
  'Jest': siJest,
  'GitHub Actions': siGithubactions,
  'Git': siGit,
  'GitHub': siGithub,
  'WordPress': siWordpress,
  'WooCommerce': siWoo,
};

// Function to get icon data for a skill
const getSkillIcon = (skillName: string): IconData | null => {
  return SKILL_ICON_MAP[skillName] || null;
};
---

<section class="skills" id="skills">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">{t('about.skills.title')}</h2>
    </div>

    <div class="skills-content">
      <div class="skills-grid">
        {skills.map((skillCategory) => (
          <div class="skill-category">
            <h3 class="skill-category-title">{skillCategory.name}</h3>
            <div class="skill-tags">
              {skillCategory.keywords.map((skill) => {
                const iconData = getSkillIcon(skill);
                return (
                  <span class="skill-tag">
                    {iconData && (
                      <span 
                        class="skill-icon"
                        style={`color: #${iconData.hex};`}
                        set:html={iconData.svg}
                        aria-label={iconData.title}
                      />
                    )}
                    <span class="skill-name">{skill}</span>
                  </span>
                );
              })}
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
  .skills {
    padding: 5rem 0;
    background: var(--bg-primary);
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 1rem;
  }

  .section-subtitle {
    font-size: 1.1rem;
    color: var(--text-secondary);
    max-width: 600px;
    margin: 0 auto;
  }

  .skills-content {
    max-width: 1200px;
    margin: 0 auto;
  }

  .skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .skill-category {
    background: var(--bg-secondary);
    padding: 1.5rem;
    border-radius: 0.75rem;
    border: 1px solid var(--border-color);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .skill-category:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  }

  .skill-category-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 0.75rem;
  }

  .skill-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .skill-tag {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.4rem 0.8rem;
    background: var(--accent-primary-20);
    color: var(--accent-primary);
    border-radius: 1rem;
    font-size: 0.85rem;
    font-weight: 600;
    border: 1px solid var(--accent-primary-30);
    transition: background 0.3s ease, transform 0.2s ease;
  }

  .skill-tag:hover {
    background: var(--accent-primary-30);
    transform: scale(1.05);
  }

  .skill-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
  }

  .skill-icon :global(svg) {
    width: 100%;
    height: 100%;
    fill: currentColor;
  }

  .skill-name {
    line-height: 1;
  }

  @media (max-width: 768px) {
    .skills {
      padding: 3rem 0;
    }

    .section-header {
      margin-bottom: 3rem;
    }

    .section-title {
      font-size: 2rem;
    }

    .skills-grid {
      grid-template-columns: 1fr;
    }
  }
</style>


